openapi: 3.0.1
info:
  title: ECOMMERCE API
  description: API for ecommerce services
  contact:
    name: Support Team
    email: hello@between.com
  version: 0.0.1-SNAPSHOT
servers:
  - url: http://localhost:8000/api/v1
    description: Production server
tags:
  - name: Brands
    description: Brand API
  - name: Prices
    description: Price API
paths:
  /brands:
    post:
      tags:
        - Brands
      summary: Create brand
      description: Create new brand
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandCreateRequest'
        required: true
      responses:
        '200':
          description: Information about the created brand
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandCreateResponse'
        '400':
          description: Something in the request was wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Unauthorized.
        '403':
          description: Resource forbidden.
        '500':
          description: Something in the server was wrong.
  /products/{productId}/brands/{brandId}/pvp:
    get:
      tags:
        - Prices
      summary: Get pvp
      description: Calculate pvp using given filter
      operationId: get_pvp
      parameters:
        - name: productId
          in: path
          description: Product identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: brandId
          in: path
          description: Brand identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: applicationDate
          in: query
          description: Application date
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Information about the calculated pvp
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceDetailResponse'
        '400':
          description: Something in the request was wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Unauthorized.
        '403':
          description: Resource forbidden.
        '404':
          description: Some ID you requested was not found.
        '500':
          description: Something in the server was wrong.
components:
  schemas:
    BrandCreateRequest:
      required:
        - countryCode
        - name
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
          description: Brand name
          example: Google
        countryCode:
          maxLength: 3
          minLength: 0
          type: string
          description: Country small code
          example: USA
        sector:
          maxLength: 100
          minLength: 0
          type: string
          description: Sector name
          example: Technology
      description: Input data to create the brand
    ValidationErrorResponse:
      required:
        - code
        - detail
        - title
      type: object
      properties:
        field:
          type: string
          description: Field with error.
          example: productId
        code:
          type: string
          description: Error code identifying the problem occurred.
          example: product.notFound
        title:
          type: string
          description: Summary of the problem occurred.
          example: Product not found
        detail:
          type: string
          description: Message describing what problem has occurred.
          example: The product ID you requested was not found.
    BrandCreateResponse:
      required:
        - countryCode
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          description: Brand identifier
          format: int64
          example: 20
        name:
          type: string
          description: Brand name
          example: Google
        countryCode:
          type: string
          description: Country small code
          example: USA
        sector:
          type: string
          description: Sector name
          example: Technology
      description: Information about the created brand
    PriceDetailResponse:
      required:
        - brandId
        - endDate
        - productId
        - pvp
        - startDate
      type: object
      properties:
        productId:
          type: integer
          description: Product identifier
          format: int64
          example: 35455
        brandId:
          type: integer
          description: Brand identifier
          format: int64
          example: 1
        priceId:
          type: integer
          description: Price identifier
          format: int64
          example: 35455
        startDate:
          type: string
          description: Start date of a fare
          format: date-time
        endDate:
          type: string
          description: End date of a fare
          format: date-time
        pvp:
          type: number
          description: PVP
          example: 35.5